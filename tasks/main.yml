---
- name: Smoke test the environment
  fail:
    msg: "The pantheon_deploy variable is undefined or missing required parameters."
  when: "\
        (pantheon_deploy.source.git_dir is not defined) or \
        (pantheon_deploy.source.git_branch is not defined) or \
        (pantheon_deploy.target.ssh_key_base64 is not defined) or \
        (pantheon_deploy.target.ssh_pub_base64 is not defined) or \
        (pantheon_deploy.target.repo_url is not defined) or \
        (pantheon_deploy.target.git_branch is not defined) \
        "

- name: Create a temp directory to store files needed by the run
  tempfile:
    state: directory
    prefix: "pantheon-deploy-"
  register: _run_temp_dir

- name: Copy the key to the temp dir
  copy:
    content: "{{ item.data | b64decode }}"
    dest: "{{ item.dest }}"
    mode: "0600"
  loop:
    - data: "{{ pantheon_deploy.target.ssh_key_base64 }}"
      dest: "{{ _run_temp_dir.path }}/id_ssh"
    - data: "{{ pantheon_deploy.target.ssh_pub_base64 }}"
      dest: "{{ _run_temp_dir.path }}/id_ssh.pub"
  no_log: "{{ pantheon_deploy.debug | default(true) | bool }}"

- name: Check if the target branch exists
  shell: >
    git ls-remote --exit-code --heads {{ pantheon_deploy.target.repo_url }} {{ pantheon_deploy.target.git_branch }}
  ignore_errors: yes
  environment:
    GIT_SSH_COMMAND: "ssh -i {{ _run_temp_dir.path }}/id_ssh -o StrictHostKeyChecking=accept-new -o PubkeyAcceptedAlgorithms=+ssh-rsa -o HostkeyAlgorithms=+ssh-rsa"
  register: _target_branch_exists

- name: Clone branch from upstream
  ansible.builtin.git:
    repo: "{{ pantheon_deploy.target.repo_url }}"
    dest: "{{ _run_temp_dir.path }}/src"
    clone: yes
    force: yes
    recursive: yes
    bare: no
    update: yes
    accept_hostkey: yes
    ssh_opts: "-o IdentityFile={{ _run_temp_dir.path }}/id_ssh -o PubkeyAcceptedAlgorithms=+ssh-rsa -o HostkeyAlgorithms=+ssh-rsa"
    key_file: "{{ _run_temp_dir.path }}/id_ssh"
    version: "{% if _target_branch_exists.rc == 0 %}\
              {{ pantheon_deploy.target.git_branch }}\
              {% else %}\
              master\
              {% endif %}"
  environment:
    GIT_TERMINAL_PROMPT: 0

- name: Create upstream branch unless it already exists
  shell: >
    git switch -C {{ pantheon_deploy.source.git_branch }}
  args:
    chdir: "{{ _run_temp_dir.path }}/src/"
  when:
    - _target_branch_exists.rc != 0
  environment:
    GIT_SSH_COMMAND: "ssh -i {{ _run_temp_dir.path }}/id_ssh -o PubkeyAcceptedAlgorithms=+ssh-rsa -o HostkeyAlgorithms=+ssh-rsa"

- name: Copy changes to upstream
  ansible.posix.synchronize:
    src: "{{ pantheon_deploy.source.git_dir }}/"
    dest: "{{ _run_temp_dir.path }}/src/"
    delete: yes
    archive: yes
    rsync_opts: "--exclude=.git/"
  delegate_to: localhost

- name: Check if .gitignore-pantheon exists
  stat:
    name: "{{ pantheon_deploy.source.git_dir }}/.gitignore-pantheon"
  register: _gitignore_pantheon

- name: Overwrite .gitignore on target if .gitignore-pantheon exists
  copy:
    src: "{{ pantheon_deploy.source.git_dir }}/.gitignore-pantheon"
    dest: "{{ _run_temp_dir.path }}/src/.gitignore"
  when:
    - _gitignore_pantheon.stat.exists == true

- name: Work with npm list
  include_tasks: "npm.yml"
  loop: "{{ pantheon_deploy.build.npm }}"
  when: ( pantheon_deploy.build.npm is defined ) and ( pantheon_deploy.build.npm | type_debug == "list" )

- name: Work with npm item
  include_tasks: "npm.yml"
  loop: "{{ [pantheon_deploy.build.npm] }}"
  when: ( pantheon_deploy.build.npm is defined ) and ( pantheon_deploy.build.npm | type_debug != "list" )  

- name: Work with secrets
  include_tasks: "secrets.yml"
  when:
    - pantheon_deploy.secrets is defined

- name: Do custom build tasks if any
  include_tasks: "{{ item }}"
  loop: "{{ pantheon_deploy.build.include_tasks | default([]) }}"

- name: Check if there are git changes
  shell: >
    git status --porcelain
  args:
    chdir: "{{ _run_temp_dir.path }}/src/"
  register: _git_status

- name: Add, commit, and push upstream if changes
  shell: >
    git add -A &&
    git commit -m "{{ _message }}" &&
    git push -u origin {{ pantheon_deploy.target.git_branch }}
  args:
    chdir: "{{ _run_temp_dir.path }}/src/"
  vars:
    _message: "{{ pantheon_deploy.target.git_commit_message | default('_pantheon_deploy_defaults.target.git_commit_message') }}"
  environment:
    GIT_SSH_COMMAND: "ssh -i {{ _run_temp_dir.path }}/id_ssh -o PubkeyAcceptedAlgorithms=+ssh-rsa -o HostkeyAlgorithms=+ssh-rsa"
  when: ( _git_status.stdout | default('') != '' ) and ( 'nothing to commit, working tree clean' not in _git_status.stdout )

- name: Do post-deploy
  include_tasks: "postdeploy.yml"
  when:
    - pantheon_deploy.post_deploy is defined

- name: Do custom post-deploy tasks if any
  include_tasks: "{{ item }}"
  loop: "{{ pantheon_deploy.post_deploy.include_tasks | default([]) }}"

